import{_ as t,c as e,o,a2 as n}from"./chunks/framework.DDIT__tB.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"articles/how-i-switched-from-devto-to-own-docs.instructions.md","filePath":"articles/how-i-switched-from-devto-to-own-docs.instructions.md"}'),s={name:"articles/how-i-switched-from-devto-to-own-docs.instructions.md"};function l(a,i,r,c,p,u){return o(),e("div",null,i[0]||(i[0]=[n('<h3 id="copilot-instructions-begin" tabindex="-1"><strong>copilot instructions begin</strong> <a class="header-anchor" href="#copilot-instructions-begin" aria-label="Permalink to &quot;**copilot instructions begin**&quot;">â€‹</a></h3><p><strong>style</strong></p><p>For all headings, sections and subsections, use sentence case instead of title case. In sentence case you only capitalise the first letter of a new sentence, and any proper nouns (no common nouns require capitalisation).</p><p>Use varied sentence lengths and complexity for dynamic flow. Avoid predictable patterns. Apply perplexity and burstiness. Mix very short sentences with longer ones. Don&#39;t follow formulaic structures. Be unpredictable in word choices.</p><p>Only capitalize proper nouns. Not job titles, not seasons, not departments or subjects.</p><p>Be direct and assertive. Avoid hedge words like &#39;quite,&#39; &#39;rather,&#39; &#39;somewhat,&#39; &#39;it could be argued.&#39; Make bold statements without unnecessary qualifiers.</p><p>Skip generic introductions and conclusions. Start with impact, not setup. End with energy, not summary. Avoid phrases like &#39;in today&#39;s world&#39; or &#39;in conclusion.</p><p><strong>article skeleton</strong></p><p>intro:</p><ul><li>dev.to is nice but is not for me</li><li>i want a cleaner simpler rough user interface</li></ul><p>content:</p><ul><li><p>tech stack:</p><ul><li><p>vitepress</p></li><li><p>vue</p></li><li><p>github pages</p></li><li><p>vibe coding</p></li><li><p>google analytics</p></li><li><p>why:</p><ul><li><p>because is cool</p></li><li><p>vitepress and vue are both fast</p></li><li><p>vitepress has very nice instructions on how to deploy to github pages</p></li><li><p>with vue i can create components and make the UI look exactly how i want</p></li><li><p>github pages is public, and offers me the hosting for my static site</p></li><li><p>vibe coding? really?</p><ul><li>why not? is fun for building simple UI components without having too much hands on with vue.</li></ul></li><li><p>google analytics</p><ul><li>dev.to and other blogging sites show you analytics</li><li>well you can have them on your own site, and much more than you got with their platforms</li></ul></li></ul></li></ul></li><li><p>here is how i did it:</p><ul><li>vitepress installation and instructions</li><li>vue components explained: BlogIndex, PostCard, AboutCard</li><li>simplifying vitepress to show: <ul><li>home, and about pages</li><li>nice logo</li><li>search (fuzzy search)</li><li>no sidebar needed</li></ul></li><li>analytics <ul><li>instructions on how to configure google analytics</li><li>opt out from google analytics filtering out your public IP</li></ul></li></ul></li></ul><p>outro:</p><ul><li>there is no reason why not have your own docs site</li><li>link to the github repo</li></ul><p><strong>copilot instructions END</strong></p>',15)]))}const g=t(s,[["render",l]]);export{h as __pageData,g as default};
